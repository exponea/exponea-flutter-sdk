plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace = "com.exponea.example"
    compileSdkVersion rootProject.ext.compileSdkVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.exponea.example"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        config {
            // Set the parameters based on the actual signing information.
            storeFile file('Exponea.jks')
            storePassword 'Exponea'
            keyPassword 'Exponea'
            keyAlias 'key0'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    flavorDimensions "messagingService"
    productFlavors {
        gms {
            dimension = "messagingService"
        }
        hms {
            dimension = "messagingService"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "com.android.support:multidex:$multidexVersion"
    implementation "com.exponea.sdk:sdk:$exponeaSdkVersion"
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation "com.google.code.gson:gson:$gsonVersion"

    gmsImplementation "com.google.firebase:firebase-messaging:$firebaseVersion"
    hmsImplementation "com.huawei.agconnect:agconnect-core:$agconnectVersion"
    hmsImplementation "com.huawei.hms:push:$hmsVersion"

    // tests :
    testImplementation 'junit:junit:4.12'
    testImplementation "com.exponea.sdk:sdk:$exponeaSdkVersion"
    testImplementation "com.google.code.gson:gson:$gsonVersion"
}


if (getGradle().getStartParameter().getTaskRequests().toString().toLowerCase().contains("gms")) {
    apply plugin: 'com.google.gms.google-services'
}
if (getGradle().getStartParameter().getTaskRequests().toString().toLowerCase().contains("hms")) {
    apply plugin: 'com.huawei.agconnect'
}
